JUMP main
LABEL pgcd
LOADL 0
LOAD (1) -2[LB]
LOAD (1) -1[LB]
LABEL boucle
LOAD (1) 5[LB]
JUMPIF (0) fin
LOAD (1) 4[LB]
LOAD (1) 5 [LB]
SUBR IMod
STORE (1) 3[LB]
LOAD (1) 5[LB]
STORE (1) 4[LB]
LOAD (1) 3[LB]
STORE(1) 5[LB]
JUMP boucle
LABEL fin
LOAD (1) 4[LB]
RETURN (1) 2

LABEL norm
LOAD (1) -2[LB]
LOAD (1) -1[LB]
CALL (LB) pgcd
LOAD (1) -2[LB]
LOAD (1) 3[LB]
SUBR IDiv
LOAD (1) -1[LB]
LOAD (1) 3[LB]
SUBR IDiv
RETURN (2) 2

LABEL ROut
LOADL '['
SUBR COut
LOAD (1) -2[LB]
SUBR IOut
LOADL '|'
SUBR COut
LOAD (1) -1[LB]
SUBR IOut
LOADL ']'
SUBR COut
POP (0) 1
RETURN (0) 2

LABEL RAdd
LOAD (1) -4[LB]
LOAD (1) -1[LB]
SUBR IMul
LOAD (1) -2[LB]
LOAD (1) -3[LB]
SUBR IMul    
SUBR IAdd    
LOAD (1) -3[LB]
LOAD (1) -1[LB]
SUBR IMul    
CALL (ST) norm
POP (2) 4
RETURN (2) 4

LABEL RMul
LOAD (1) -4[LB]
LOAD (1) -2[LB]
SUBR IMul
LOAD (1) -3[LB]
LOAD (1) -1[LB]
SUBR IMul
CALL (ST) norm
POP (2) 4
RETURN (2) 4


LABEL main
PUSH 2
LOADL 6
LOADL 8
STORE (2) 0[SB]
PUSH 1
LOADL 8
LOADL 1
SUBR IAdd
STORE (1) 2[SB]
LOAD (2) 0[SB]
LOADL 3
LOADL 2
CALL (ST) RAdd
STORE (2) 0[SB]
LABEL etiq0     ; debut while
LOAD (1) 2[SB]
LOADL 12
SUBR ILss
JUMPIF (0) etiq1
PUSH 2
LOAD (2) 0[SB]
LOADL 5
LOAD (1) 2[SB]
CALL (ST) RMul
STORE (2) 3[SB]
LOAD (2) 3[SB]
CALL (ST) ROut
LOAD (1) 2[SB]
LOADL 1
SUBR IAdd
STORE (1) 2[SB]
POP (0) 2
JUMP etiq0
LABEL etiq1     ; fin while
POP (0) 3
HALT

